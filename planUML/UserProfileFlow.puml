@startuml
top to bottom direction

object SecurePrefsData{
}

rectangle "UserProfile para representación" as Caso1{
    component ProfileScreen{
    }
    component ProfileViewModel{
    }
    component GetProfileUseCase{
    }
    class SessionManager.getLocalUserProfile
}

Caso1.ProfileViewModel <--> Caso1.ProfileScreen
Caso1.ProfileViewModel --> Caso1.GetProfileUseCase

Caso1.GetProfileUseCase --> Caso1.SessionManager.getLocalUserProfile : Solicita datos para presentación
Caso1.SessionManager.getLocalUserProfile --> SecurePrefsData


rectangle "Inicio de sesion \n (Muy similar al flujo de registro)" as Caso2{
    class SessionManager.loginUser
    class SessionManager.uploadUserProfile
    component FiresStoreRepository{
        class getUserProfile
        class createUserProfile
    }
    component AuthRepository{
        class getAuthUserProfile
        class loginUser
    }
    component LoginUserUseCase{
    }
}

Caso2.LoginUserUseCase --> Caso2.SessionManager.loginUser

Caso2.SessionManager.loginUser --> Caso2.AuthRepository.loginUser : Solicita inicio de sesión
Caso2.SessionManager.loginUser <-- Caso2.AuthRepository.getAuthUserProfile : Comprueba que la sesión se ha iniciado
Caso2.SessionManager.loginUser --> Caso2.SessionManager.uploadUserProfile : Guarda el perfil de usuario en Firestore si no existe
Caso2.SessionManager.loginUser --> SecurePrefsData : Guarda datos para representación local

Caso2.SessionManager.uploadUserProfile --> Caso2.FiresStoreRepository.getUserProfile
Caso2.SessionManager.uploadUserProfile --> Caso2.FiresStoreRepository.createUserProfile
@enduml
